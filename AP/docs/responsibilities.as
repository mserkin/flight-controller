configuration
	configuration
		Starter
			Цель: обеспечить старт приложения
			Обязанности as-is=to-be:
				1. инициализация при запуске приложения
					- инициализирует ScreenManager
					- инициализирует FrameBuilder
					- создает экземпляры контроллеров и фасада модели
					- задает стартовый контроллер (FrameBuilder.ActiveController = gcGameController)
View
	input
		Core
			Цель: обрабатывать управляющие воздействия и трансформировать их в вызовы контроллера
			Обязанности as-is=to-be:
				1. новые кадры
					- управляет таймером, генерирующим частоту кадров
					- перехватывает событие таймера
					- сообщает контроллеру о начале нового кадра
					- инициирует построение кадра (FrameBuilder.buildFrame())
				3. обработка управляющих воздействий
					- подписывается на события мыши и клавитуры
					- транслирует ввод в методы контроллера
					- управляет переключением контроллеров, для это анализируется DisplayMode 
	view
		AircraftView
			Цель: отображение летательных аппаратов
			Обязанности as-is=to-be:
		AirfieldView
			Цель: отображение ВПП
			Обязанности as-is=to-be:
				1. отображение ВПП
		AirportView
			Цель: формирование кадров
			Обязанности as-is=to-be:
		FrameBuilder
			Цель: формирование кадров
			Обязанности as-is:
			X1. позволяет назначить и предоставляет активный контроллер - убрать в ControllerDispatcher, 
				который будет листнером событий вьюх?
			2. управляет формированием кадра
				X- предоставляет высоту информационной панели - DUP: InfoPanelView
				- предоставляет событие BeforeRescale
				- предоставляет инструменты приведения координат от координат модели к экраннным и обратно
			?3. позволяет отобразить конфигурацию уровня по запросу клиента - должен сам инициировать
			X4. переключает контроллеры - убрать в ControllerDispatcher
			Обязанности to-be:		
				1. управляет формированием кадра
		HintPanelView
			Цель: показ подсказок
			Обязанности as-is=to-be:
			1. показ подсказок
				- предоставляет события показа подсказок
				- предоставляет информацию о подсказках
				- предоставляет возможность показать и убрать подсказку
				- предоставляет возможность определить попадание заданной точки в панель с подсказкой
		InfoPanelView
			Цель: отрисовка информационной панели
			Обязанности as-is:
				X1. предоставляет информацию о положении своих элементов
					- позволяет определенить относится ли заданная точка к контроллу - обрабатывать ввод пользователя,
						должен быть одним из листнеров событий Core?
					- предоставляет высоту информационной панели - забрать у FrameBuilder или отдать ему?
				2. отрисовка информационной панели
					- анализирует для опеределения показа своих элементов текущий контроллер
			Обязанности to-be:										
				2. отрисовка информационной панели
		MenuView
			Цель: отображение элементов меню - и поднимать события, которые могут передаваться специальному контроллеру?
			Обязанности as-is=to-be:
				X1. предоставляет общее количество уровней - точно не должно быть здесь
				X2. предоставляет информацию о прогрессе завершения уровня - точно не должно быть здесь
				3. отображение меню
				X4. предоставляет информацию о боксе или уровне по заданным координатам - должен стать одним из 
					листнеров событий Core
			Обязанности to-be:									
				3. отображение меню
				5. сообщать контроллеру меню о действиях пользователя по отношению к меню
Controller
	controller
		EditController
			Цель: обеспечивает редактирование уровней
			Обязанности as-is=to-be:
				X1. предоставляет режим отображения - убрать в ControllerDispatcher
				X2. позволяет другим управлять моделью  - то есть предоставляет управление во вне. это плохо,
						должен стать листнером событий вьюх, и сам управлять моделью.
					- удалять выделенный объект
					- создавать объект - кому это требуется еще и почему?
					- позволяет управлять размерами аэропорта - кому это требуется еще и почему?
					- позволяет управлять размерами объекта - кому это требуется еще и почему?
					- позволяет вращать объект - кому это требуется еще и почему?
					- позволяет выделять объект - кому это требуется еще и почему?
					- позволяет изменять занятость гейта - кому это требуется еще и почему?
				3. получает ввод пользователя и управляет моделью, чтобы обеспечивать редактирование уровней
					- помогает сгенерировать конфигурацию уровня
					- получает ввод и реагирует управляя моделью
			Обязанности to-be:
				3. получает ввод пользователя и управляет моделью, чтобы обеспечивать редактирование уровней
		GameController
			Цель: получать ввод пользователя и управлять моделью, обеспечиваю игровые действия пользователя
			Обязанности as-is:
				1. получать ввод пользователя и управлять моделью, обеспечивая игровые действия пользователя
				2. предоставлять информацию о состоянии игры
					- информация о прогрессе
					- информация о скорости симуляции
				X3. предоставляет режим отображения - убрать в менеджер контроллеров
				X4. позволяет управлять скоростью симуляции - должен стать листнером событий вьюх, и сам управлять скоростью
				X5. позволяет управлять меню - в MenuController
				?6. позволяет скорректировать область аэропорта - разобраться
				?7. позволяет стартовать и завершать уровни
				X8. позволяет выделять объекты модели - должен стать листнером событий вьюх, и сам управлять скоростью
			Обязанности to-be:									
				1. получать ввод пользователя и управлять моделью, обеспечиваю игровые действия пользователя
				2. предоставлять информацию о состоянии игры
Model
	model
		Aircraft
			Цель: симуляция летательного аппарата
			Обязанности as-is=to-be:
				1. инкапсуляция и предоставление свойств летательного аппарата
				2. симуляция летательного аппарата
				3. позволяет проверить на столкновение с другим самолетом
				4. предоставление управления летательным аппаратом
				5. проверяет на попадание точки в область летательного аппарата
		Airport
			Цель: фасад к модели
			Обязанности as-is=to-be:
				1. предоставляет объекты модели, их свойства
				2. позволяет управлять объектами модели
				3. предоставляет возможность загрузить уровень и управляет загрузкой
				4. предоставляет события модели и загрузки уровня
				5. позволяет сформировать конфигурацию уровня
		Cloud
			Цель: симуляция облака
			Обязанности as-is=to-be:
				1. проверяет на попадание точки в область облака
				2. симуляция облака
		Copter
			Цель: симуляция вертолета
			Обязанности as-is=to-be:
				1. инкапсулирует специфику вертолета
		Gate	
			Цель: симуляция гейта
			Обязанности as-is=to-be:
				1. симулировать гейт
				2. предоставлять возможность занять и освободить гейт
				3. предоставление свойств гейта
				4. позволяет привязать себя к ВПП
				5. проверяет на попадание точки в область гейта
				6. загрузка и формирование конфигурации
		Helipad	
			Цель: симуляция вертолетной площадки
			Обязанности as-is=to-be:
				1. симулирует площадку
				2. предоставление свойств площадки
				3. предоставляет возможность занять и освободить площадку
				4. загрузка и формирование конфигурации
		Plane	
			Цель: симуляция самолета
			Обязанности as-is=to-be:
				1. инкапсулирует специфику самолета
		Runway
			Цель: симуляция ВПП
			Обязанности as-is=to-be:
				1. симулирует ВПП
				2. предоставление свойств ВПП
				3. предоставляет возможность занять и освободить ВПП
				4. загрузка и формирование конфигурации
				5. для заданного самолета позволяет опрделенить расстояние от центральной линии
				6. проверяет на попадание точки в посадочную зону
				?7. позволяет предоставить текущий ветер для определения рабочего курса -
					сейчас ветер скармливается ВПП, это не дает профита скармливающему. было бы лучше,
					чтобы ВПП запрашивала ветер. но в какой момент? подписываться на событие смены?
		Wind	
			Цель: инкапсуляция и изменение свойств ветра
			Обязанности as-is=to-be:
				1. получение ограничений ветра
				?2. позволяет измененить ветер - инициатива отдается наружу, плохо. Wind должен сам 
					изменять ветер. Подписаться на событие?
				3. предоставление свойств текущего ветра
				4. предоставляеть дефолтные ограничения ветра